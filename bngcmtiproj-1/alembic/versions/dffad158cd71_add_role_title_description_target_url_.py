"""Add role, title, description, target_url to notifications

Revision ID: dffad158cd71
Revises: 0010_add_user_id_to_tool_usage_requests
Create Date: 2025-08-19 15:36:01.992237

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'dffad158cd71'
down_revision = '0010_add_user_id_to_tool_usage_requests'
branch_labels = None
depends_on = None

def upgrade():
	# ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tool_issues_id'), table_name='tool_issues')
    op.drop_table('tool_issues')
    op.add_column('notifications', sa.Column('role', sa.String(length=50), nullable=True))
    op.add_column('notifications', sa.Column('title', sa.String(length=100), nullable=True))
    op.add_column('notifications', sa.Column('description', sa.String(length=255), nullable=True))
    op.add_column('notifications', sa.Column('target_url', sa.String(length=255), nullable=True))
    op.alter_column('notifications', 'message',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('tool_inventory', 'location')
    op.drop_column('tool_inventory', 'remarks')
    op.drop_column('tool_inventory', 'gauge')
    op.alter_column('tool_usage_requests', 'request_id',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=32),
               existing_nullable=False)
    op.create_index(op.f('ix_tool_usage_requests_request_id'), 'tool_usage_requests', ['request_id'], unique=True)
    op.create_foreign_key(None, 'tool_usage_requests', 'users', ['reviewer_id'], ['id'])
    op.create_foreign_key(None, 'tool_usage_requests', 'users', ['operator_id'], ['id'])
    # ### end Alembic commands ###

def downgrade():
	# ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tool_usage_requests', type_='foreignkey')
    op.drop_constraint(None, 'tool_usage_requests', type_='foreignkey')
    op.drop_index(op.f('ix_tool_usage_requests_request_id'), table_name='tool_usage_requests')
    op.alter_column('tool_usage_requests', 'request_id',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
    op.add_column('tool_inventory', sa.Column('gauge', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('tool_inventory', sa.Column('remarks', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('tool_inventory', sa.Column('location', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.alter_column('notifications', 'message',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('notifications', 'target_url')
    op.drop_column('notifications', 'description')
    op.drop_column('notifications', 'title')
    op.drop_column('notifications', 'role')
    op.create_table('tool_issues',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tool_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('operator_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['operator_id'], ['users.id'], name=op.f('tool_issues_operator_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('tool_issues_pkey'))
    )
    op.create_index(op.f('ix_tool_issues_id'), 'tool_issues', ['id'], unique=False)
    # ### end Alembic commands ###
